# .travis.yml
---
dist: trusty
#sudo: required
language: python
python:
  - "3.6"
env:
  - >
    DISTRIBUTION=ubuntu
    DIST_VERSION=18_04-builded
    MONGODB_VERSION=4.2
    MONGODB_PACKAGE=mongodb-org
    DOCKER_PRIVILEGED=true 
#  - >
#    DISTRIBUTION=ubuntu
#    DIST_VERSION=18_04-builded
#    MONGODB_VERSION=4.0
#    MONGODB_PACKAGE=mongodb-org
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=ubuntu
#    DIST_VERSION=18_04-builded
#    MONGODB_VERSION=3.6
#    MONGODB_PACKAGE=mongodb
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=ubuntu
#    DIST_VERSION=16_04-builded
#    MONGODB_VERSION=4.2
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=ubuntu
#    DIST_VERSION=16_04-builded
#    MONGODB_VERSION=4.0
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=ubuntu
#    DIST_VERSION=16_04-builded
#    MONGODB_VERSION=3.6
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=ubuntu
#    DIST_VERSION=16_04-builded
#    MONGODB_VERSION=3.4
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=ubuntu-upstart
#    DIST_VERSION=14_04-builded
#    MONGODB_VERSION=4.0
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=ubuntu-upstart
#    DIST_VERSION=14_04-builded
#    MONGODB_VERSION=3.6
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=ubuntu-upstart
#    DIST_VERSION=14_04-builded
#    MONGODB_VERSION=3.4
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=debian
#    DIST_VERSION=9-builded
#    MONGODB_VERSION=4.2
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=debian
#    DIST_VERSION=9-builded
#    MONGODB_VERSION=4.0
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=debian
#    DIST_VERSION=9-builded
#    MONGODB_VERSION=3.6
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=debian
#    DIST_VERSION=8-builded
#    MONGODB_VERSION=4.0
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=debian
#    DIST_VERSION=8-builded
#    MONGODB_VERSION=3.6
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=debian
#    DIST_VERSION=8-builded
#    MONGODB_VERSION=3.4
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=centos
#    DIST_VERSION=6-builded
#    MONGODB_VERSION=4.2
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=centos
#    DIST_VERSION=6-builded
#    MONGODB_VERSION=4.0
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=centos
#    DIST_VERSION=6-builded
#    MONGODB_VERSION=3.6
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=centos
#    DIST_VERSION=6-builded
#    MONGODB_VERSION=3.4
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=centos
#    DIST_VERSION=7-builded
#    MONGODB_VERSION=4.2
#    DOCKER_PRIVILEGED=false
#  - >
#    DISTRIBUTION=centos
#    DIST_VERSION=7-builded
#    MONGODB_VERSION=4.0
#    DOCKER_PRIVILEGED=false
#  - >
#    DISTRIBUTION=centos
#    DIST_VERSION=7-builded
#    MONGODB_VERSION=3.6
#    DOCKER_PRIVILEGED=false
#  - >
#    DISTRIBUTION=centos
#    DIST_VERSION=7-builded
#    MONGODB_VERSION=3.4
#    DOCKER_PRIVILEGED=false
#  - >
#    DISTRIBUTION=amazonlinux
#    DIST_VERSION=2-builded
#    MONGODB_VERSION=4.2
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=amazonlinux
#    DIST_VERSION=2-builded
#    MONGODB_VERSION=4.0
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=amazonlinux
#    DIST_VERSION=2-builded
#    MONGODB_VERSION=3.6
#    DOCKER_PRIVILEGED=true
#  - >
#    DISTRIBUTION=amazonlinux
#    DIST_VERSION=2-builded
#    MONGODB_VERSION=3.4
#    DOCKER_PRIVILEGED=true

services:
  - docker

before_install:
  # bash tests/scripts/before_install.sh
  #- pip install docker ansible mitogen
  - pip install docker ansible
  # export ANSIBLE_STRATEGY_PLUGINS=/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/ansible_mitogen/plugins/strategy
  # export ANSIBLE_STRATEGY=mitogen_linear
  # "export ANSIBLE_STRATEGY_PLUGINS=$(pip show mitogen | awk '/Location: /{print $2}')/ansible_mitogen/plugins/strategy"
  # echo $ANSIBLE_STRATEGY_PLUGINS

install:
  - if [ -f tests/Dockerfile.${DISTRIBUTION}_${DIST_VERSION} ]; then docker build --rm=true --file=tests/Dockerfile.${DISTRIBUTION}_${DIST_VERSION} --tag ${DISTRIBUTION}:${DIST_VERSION} tests; else docker pull ${DISTRIBUTION}:${DIST_VERSION}; fi
  - ln -s ${PWD} tests/greendayonfire.mongodb

script:
  - bash tests/scripts/test.sh

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
